import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "Block.h"
        name: "Block"
        accessSemantics: "reference"
        prototype: "QQuickPaintedItem"
        exports: ["tetris/Block 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "color"
            type: "QColor"
            read: "color"
            write: "setColor"
            notify: "colorChanged"
            index: 0
            isFinal: true
        }
        Signal { name: "colorChanged" }
    }
    Component {
        file: "Blocks.h"
        name: "Blocks"
        accessSemantics: "reference"
        prototype: "QQuickPaintedItem"
        exports: ["tetris/Blocks 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "Block_Type"
            values: [
                "BLOCK_TYPE_I",
                "BLOCK_TYPE_L",
                "BLOCK_TYPE_J",
                "BLOCK_TYPE_O",
                "BLOCK_TYPE_Z",
                "BLOCK_TYPE_S",
                "BLOCK_TYPE_T",
                "BLOCK_NONE"
            ]
        }
        Property {
            name: "color"
            type: "QColor"
            read: "color"
            write: "setColor"
            notify: "colorChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "blockType"
            type: "Block_Type"
            read: "blockType"
            write: "setBlockType"
            notify: "blockTypeChanged"
            index: 1
            isFinal: true
        }
        Signal { name: "colorChanged" }
        Signal { name: "blockTypeChanged" }
        Method {
            name: "moveY"
            Parameter { name: "direction"; type: "int" }
        }
        Method {
            name: "moveX"
            Parameter { name: "direction"; type: "int" }
        }
        Method {
            name: "spin"
            Parameter { name: "direction"; type: "int" }
        }
    }
    Component {
        file: "TetrisMap.h"
        name: "TetrisMap"
        accessSemantics: "reference"
        defaultProperty: "data"
        parentProperty: "parent"
        prototype: "QQuickItem"
        exports: ["tetris/TetrisMap 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "down"
            type: "Blocks::Block_Type"
            read: "down"
            write: "setDown"
            notify: "downChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "hold"
            type: "Blocks::Block_Type"
            read: "hold"
            write: "setHold"
            notify: "holdChanged"
            index: 1
            isFinal: true
        }
        Property {
            name: "typeList"
            type: "Blocks::Block_Type"
            isList: true
            read: "typeList"
            notify: "typeListChanged"
            index: 2
            isReadonly: true
            isFinal: true
        }
        Signal { name: "downChanged" }
        Signal { name: "holdChanged" }
        Signal { name: "typeListChanged" }
        Method {
            name: "keyPressEvent"
            Parameter { name: "event"; type: "QKeyEvent"; isPointer: true }
        }
        Method {
            name: "addBlockPos"
            Parameter { name: "blocks"; type: "Blocks"; isPointer: true }
        }
        Method { name: "deleteLine" }
        Method { name: "downBlock" }
    }
}
